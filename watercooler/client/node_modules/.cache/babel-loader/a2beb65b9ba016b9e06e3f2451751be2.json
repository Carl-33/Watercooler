{"ast":null,"code":"import _toConsumableArray from \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/src/components/Pages/Forum.js\";\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Wally from \"../images/wally3.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport API from \"../../utils/API\";\nimport Comment from \"../Comment\"; // import axios from \"axios\";\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(0, 3),\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        color: \"white\",\n        width: \"45ch\"\n      }\n    },\n    media: {\n      height: 200\n    },\n    paper: {\n      maxWidth: 600,\n      margin: \"\".concat(theme.spacing(5), \"px auto\"),\n      padding: theme.spacing(2)\n    },\n    inline: {\n      display: \"inline\"\n    }\n  };\n}); //Forum Default\n\nvar Forum = function Forum() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"John Smith\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(\"Work Thoughts\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"What do you guys think about work?\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      comment = _useState8[0],\n      setComment = _useState8[1]; //\n\n\n  var classes = useStyles();\n  var authorRef = useRef();\n  var titleRef = useRef();\n  var bodyRef = useRef();\n\n  var savePost = function savePost(e) {\n    e.preventDefault(); // console.log(\"hi!\");\n\n    API.createComment({\n      author: authorRef.current.value,\n      title: titleRef.current.value,\n      body: bodyRef.current.value\n    });\n    authorRef.current.value = \"\";\n    titleRef.current.value = \"\";\n    bodyRef.current.value = \"\";\n  };\n\n  console.log(savePost); // const renderComments = () => {\n  //   // API reqeuest for the DB\n  //   const render = () => {\n  //     let dbData = API.getComments();\n  //     let newComments = dbData.then((data) => data.data);\n  //     // let finalComments = newComments.then((data) => JSON.stringify(data));\n  //     return newComments;\n  //   };\n  //   render().then((newComments) => setComment(newComments));\n  //   //this works\n  //   // console.log(\"this is new comments\" + setComment(newComments));\n  //   // console.log(\"just 77\" + dbData.then((data) => console.log(data)));\n  //   // console.log(\"just 78\" + comments.then((data) => console.log(data)));\n  //   console.log(\"just comments 79\" + comments);\n  // };\n\n  useEffect(function () {\n    // API reqeuest for the DB\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var dbData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.getComments();\n\n            case 2:\n              dbData = _context.sent;\n              setComments(dbData.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))(); // render().then((newComments) => setComment(newComments));\n\n\n    console.log(\"just comments 79\" + comments);\n  }, []);\n\n  var handleNewComments = function handleNewComments() {\n    console.log(authorRef, titleRef, bodyRef);\n    var inputs = {\n      author: authorRef,\n      title: titleRef,\n      body: bodyRef\n    }; // setComments([...comments, inputs]);\n\n    console.log(\"line 102\", [].concat(_toConsumableArray(comments), [inputs]));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    spacing: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"h5\",\n    component: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"| Watercooler Forum |\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: Wally,\n    title: \"Wally\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Connect with your fellow co-workers here by creating a post!\"))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: function onClick() {\n      return \"window.location.href='https://dashboard.heroku.com/apps/sheltered-cliffs-91068'\";\n    },\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, \"Share\"))))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Brunch this weekend?\",\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Ali Connors\"), \" — I'll be in your neighborhood doing errands this…\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Summer BBQ\",\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, \"to Scott, Alex, Jennifer\"), \"\\u2014 Wish I could come, but I'm out of town this\\n                  Wish I could come, but I'm out of town thisWish I could come, \\n                  but I'm out of town thisWish I could come, but I'm \\n                  out of town thisWish I could come, but I'm out \\n                  of town this\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Oui Oui\",\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, \"Sandra Adams\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }))), console.log(comments[0], \"comment\"), comments !== undefined ? comments.map(function (comments, i) {\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: i,\n      comments: comments,\n      classes: classes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleNewComments,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MessageIcon, {\n    style: {\n      margin: \"3\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }), \"Submit Post\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    id: \"Name\",\n    label: \"Name\",\n    name: \"Name\",\n    defaultValue: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    required: true,\n    inputRef: authorRef,\n    autoComplete: \"lname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    defaultValue: \"Work Thoughts\",\n    required: true,\n    inputRef: titleRef,\n    autoComplete: \"lname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Comment\",\n    multiline: true,\n    rows: 6,\n    defaultValue: \"What do you guys think about work?\",\n    required: true,\n    inputRef: bodyRef,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Forum;","map":{"version":3,"sources":["/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/src/components/Pages/Forum.js"],"names":["React","useRef","useState","useEffect","Paper","makeStyles","Grid","Typography","Button","TextField","Card","CardActionArea","CardActions","CardContent","CardMedia","Wally","List","ListItem","Divider","ListItemText","MessageIcon","API","Comment","useStyles","theme","root","flexGrow","overflow","padding","spacing","margin","color","width","media","height","paper","maxWidth","inline","display","Forum","comments","setComments","name","setName","title","setTitle","comment","setComment","classes","authorRef","titleRef","bodyRef","savePost","e","preventDefault","createComment","author","current","value","body","console","log","getComments","dbData","data","handleNewComments","inputs","undefined","map","i","target"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Wally from \"../images/wally3.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport API from \"../../utils/API\";\nimport Comment from \"../Comment\";\n// import axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 3),\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      color: \"white\",\n      width: \"45ch\",\n    },\n  },\n  media: {\n    height: 200,\n  },\n  paper: {\n    maxWidth: 600,\n    margin: `${theme.spacing(5)}px auto`,\n    padding: theme.spacing(2),\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\n//Forum Default\nconst Forum = () => {\n  const [comments, setComments] = useState([]);\n  const [name, setName] = useState(\"John Smith\");\n  const [title, setTitle] = useState(\"Work Thoughts\");\n  const [comment, setComment] = useState(\"What do you guys think about work?\");\n  //\n  const classes = useStyles();\n  const authorRef = useRef();\n  const titleRef = useRef();\n  const bodyRef = useRef();\n\n  const savePost = (e) => {\n    e.preventDefault();\n    // console.log(\"hi!\");\n    API.createComment({\n      author: authorRef.current.value,\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n    });\n    authorRef.current.value = \"\";\n    titleRef.current.value = \"\";\n    bodyRef.current.value = \"\";\n  };\n  console.log(savePost);\n\n  // const renderComments = () => {\n  //   // API reqeuest for the DB\n  //   const render = () => {\n  //     let dbData = API.getComments();\n  //     let newComments = dbData.then((data) => data.data);\n  //     // let finalComments = newComments.then((data) => JSON.stringify(data));\n  //     return newComments;\n  //   };\n\n  //   render().then((newComments) => setComment(newComments));\n  //   //this works\n  //   // console.log(\"this is new comments\" + setComment(newComments));\n  //   // console.log(\"just 77\" + dbData.then((data) => console.log(data)));\n  //   // console.log(\"just 78\" + comments.then((data) => console.log(data)));\n  //   console.log(\"just comments 79\" + comments);\n  // };\n\n  useEffect(() => {\n    // API reqeuest for the DB\n    (async () => {\n      let dbData = await API.getComments();\n      setComments(dbData.data);\n    })();\n    // render().then((newComments) => setComment(newComments));\n\n    console.log(\"just comments 79\" + comments);\n  }, []);\n\n  const handleNewComments = () => {\n    console.log(authorRef, titleRef, bodyRef);\n    const inputs = { author: authorRef, title: titleRef, body: bodyRef };\n    // setComments([...comments, inputs]);\n    console.log(\"line 102\", [...comments, inputs]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"stretch\"\n        spacing={5}\n      >\n        <Grid item>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  align=\"center\"\n                  variant=\"h5\"\n                  component=\"h2\"\n                >\n                  | Watercooler Forum |\n                </Typography>\n                <Divider />\n                <CardMedia\n                  className={classes.media}\n                  image={Wally}\n                  title=\"Wally\"\n                />\n                <Divider />\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Connect with your fellow co-workers here by creating a post!\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button\n                size=\"small\"\n                onClick={() =>\n                  \"window.location.href='https://dashboard.heroku.com/apps/sheltered-cliffs-91068'\"\n                }\n                color=\"primary\"\n              >\n                Share\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <List className={classes.root}>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Brunch this weekend?\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    Ali Connors\n                  </Typography>\n                  {\" — I'll be in your neighborhood doing errands this…\"}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Summer BBQ\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    to Scott, Alex, Jennifer\n                  </Typography>\n                  {`— Wish I could come, but I'm out of town this\n                  Wish I could come, but I'm out of town thisWish I could come, \n                  but I'm out of town thisWish I could come, but I'm \n                  out of town thisWish I could come, but I'm out \n                  of town this`}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Oui Oui\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    Sandra Adams\n                  </Typography>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        </List>\n        {/* Render comment component*/}\n        {console.log(comments[0], \"comment\")}\n        {comments !== undefined ? (\n          comments.map((comments, i) => (\n            <Comment key={i} comments={comments} classes={classes} />\n          ))\n        ) : (\n          <React.Fragment />\n        )}\n      </Paper>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleNewComments}\n            >\n              <MessageIcon style={{ margin: \"3\" }} />\n              Submit Post\n            </Button>\n          </Grid>\n          <Grid item xs>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"Name\"\n                label=\"Name\"\n                name=\"Name\"\n                defaultValue={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n                inputRef={authorRef}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                defaultValue=\"Work Thoughts\"\n                required\n                inputRef={titleRef}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Comment\"\n                multiline\n                rows={6}\n                defaultValue=\"What do you guys think about work?\"\n                required\n                inputRef={bodyRef}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Forum;\n"]},"metadata":{},"sourceType":"module"}