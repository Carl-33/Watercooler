{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\koepk\\\\Repositories\\\\Watercooler\\\\watercooler\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\n\nvar Route = function Route(_ref) {\n  var path = _ref.path,\n      children = _ref.children;\n\n  var _useState = useState(window.location.pathname),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPath = _useState2[0],\n      setCurrentPath = _useState2[1];\n\n  useEffect(function () {\n    var onLocationChange = function onLocationChange() {\n      setCurrentPath(window.location.pathname);\n    };\n\n    window.addEventListener(\"popstate\", onLocationChange);\n    return function () {\n      window.removeEventListener(\"popstate\", onLocationChange);\n    };\n  }, []);\n  return window.location.pathname === path ? children : null;\n};\n\nexport default Route;","map":{"version":3,"sources":["C:/Users/koepk/Repositories/Watercooler/watercooler/client/src/components/Route.js"],"names":["useEffect","useState","Route","path","children","window","location","pathname","currentPath","setCurrentPath","onLocationChange","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACEH,QAAQ,CAACI,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CADV;AAAA;AAAA,MAC7BC,WAD6B;AAAA,MAChBC,cADgB;;AAEpCT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,MAAAA,cAAc,CAACJ,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAd;AACD,KAFD;;AAIAF,IAAAA,MAAM,CAACM,gBAAP,CAAwB,UAAxB,EAAoCD,gBAApC;AAEA,WAAO,YAAM;AACXL,MAAAA,MAAM,CAACO,mBAAP,CAA2B,UAA3B,EAAuCF,gBAAvC;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOL,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6BJ,IAA7B,GAAoCC,QAApC,GAA+C,IAAtD;AACD,CAdD;;AAgBA,eAAeF,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst Route = ({ path, children }) => {\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n  useEffect(() => {\n    const onLocationChange = () => {\n      setCurrentPath(window.location.pathname);\n    };\n\n    window.addEventListener(\"popstate\", onLocationChange);\n\n    return () => {\n      window.removeEventListener(\"popstate\", onLocationChange);\n    };\n  }, []);\n  return window.location.pathname === path ? children : null;\n};\n\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}