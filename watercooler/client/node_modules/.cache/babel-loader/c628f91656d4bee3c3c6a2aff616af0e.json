{"ast":null,"code":"import _slicedToArray from \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/src/components/Pages/Forum.js\";\n\nimport React, { useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Wally from \"../images/wally3.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport API from \"../../utils/API\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      overflow: \"hidden\",\n      padding: theme.spacing(0, 3),\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"45ch\"\n      }\n    },\n    media: {\n      height: 200\n    },\n    paper: {\n      maxWidth: 600,\n      margin: \"\".concat(theme.spacing(5), \"px auto\"),\n      padding: theme.spacing(2)\n    },\n    inline: {\n      display: \"inline\"\n    }\n  };\n});\nvar title = \"Title \";\nvar forum = \"This will be the posts we need to make a function to create a <p> tag inside for (huge array) \\nChange this to list items\";\nvar search = \"Truncation should be conditionally applicable on this long line of text\\n as this is a much longer line than what the container can support. \"; //Forum Default\n\nvar Forum = function Forum() {\n  //Set state for rendering comments\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var classes = useStyles();\n  var authorRef = useRef();\n  var titleRef = useRef();\n  var bodyRef = useRef();\n\n  var savePost = function savePost(e) {\n    e.preventDefault();\n    console.log(\"hi!\");\n    API.createComment({\n      author: authorRef.current.value,\n      title: titleRef.current.value,\n      body: bodyRef.current.value\n    });\n    authorRef.current.value = \"\";\n    titleRef.current.value = \"\";\n    bodyRef.current.value = \"\";\n  };\n\n  var renderedComment = comments.map(function (e) {\n    e.preventDefault();\n    API.getComments({\n      author: authorRef.current.value,\n      title: titleRef.current.value,\n      body: bodyRef.current.value\n    });\n    console.log(author, title, body);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText // this is for the title\n    , {\n      primary: title,\n      secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, author), body),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    spacing: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"h5\",\n    component: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"| Watercooler Forum |\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: Wally,\n    title: \"Wally\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Connect with your fellow co-workers here by creating a post!\"))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Share\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Learn More\"))))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Brunch this weekend?\",\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"Ali Connors\"), \" — I'll be in your neighborhood doing errands this…\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Summer BBQ\",\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, \"to Scott, Alex, Jennifer\"), \"\\u2014 Wish I could come, but I'm out of town this\\n                  Wish I could come, but I'm out of town thisWish I could come, \\n                  but I'm out of town thisWish I could come, but I'm \\n                  out of town thisWish I could come, but I'm out \\n                  of town this\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Oui Oui\",\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, \"Sandra Adams\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  })))), renderedComment, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: savePost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MessageIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }), \"Submit Post\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"Name\",\n    label: \"Name\",\n    name: \"Name\",\n    defaultValue: \"John Smith\",\n    required: true,\n    inputRef: authorRef,\n    autoComplete: \"lname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"title\",\n    label: \"Title\",\n    name: \"title\",\n    defaultValue: \"Work Thoughts\",\n    required: true,\n    inputRef: titleRef,\n    autoComplete: \"lname\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Comment\",\n    multiline: true,\n    rows: 6,\n    defaultValue: \"What do you guys think about work?\",\n    required: true,\n    inputRef: bodyRef,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Forum;","map":{"version":3,"sources":["/Users/grantpauljoslyn/Github_Josly025/Watercooler/watercooler/client/src/components/Pages/Forum.js"],"names":["React","useRef","Paper","makeStyles","Grid","Typography","Button","TextField","Card","CardActionArea","CardActions","CardContent","CardMedia","Wally","List","ListItem","Divider","ListItemText","MessageIcon","API","useStyles","theme","root","flexGrow","overflow","padding","spacing","margin","width","media","height","paper","maxWidth","inline","display","title","forum","search","Forum","useState","comment","setComment","classes","authorRef","titleRef","bodyRef","savePost","e","preventDefault","console","log","createComment","author","current","value","body","renderedComment","comments","map","getComments"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Wally from \"../images/wally3.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport API from \"../../utils/API\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 3),\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"45ch\",\n    },\n  },\n  media: {\n    height: 200,\n  },\n  paper: {\n    maxWidth: 600,\n    margin: `${theme.spacing(5)}px auto`,\n    padding: theme.spacing(2),\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nconst title = `Title `;\nconst forum = `This will be the posts we need to make a function to create a <p> tag inside for (huge array) \nChange this to list items`;\nconst search = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\n//Forum Default\nconst Forum = () => {\n  //Set state for rendering comments\n  const [comment, setComment] = useState([]);\n\n  const classes = useStyles();\n  const authorRef = useRef();\n  const titleRef = useRef();\n  const bodyRef = useRef();\n\n  const savePost = (e) => {\n    e.preventDefault();\n    console.log(\"hi!\");\n    API.createComment({\n      author: authorRef.current.value,\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n    });\n    authorRef.current.value = \"\";\n    titleRef.current.value = \"\";\n    bodyRef.current.value = \"\";\n  };\n\n  const renderedComment = comments.map((e) => {\n    e.preventDefault();\n    API.getComments({\n      author: authorRef.current.value,\n      title: titleRef.current.value,\n      body: bodyRef.current.value,\n    });\n\n    console.log(author, title, body);\n\n    return (\n      <>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText\n            // this is for the title\n            primary={title}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {author}\n                </Typography>\n                {/* //this is for the comments */}\n                {body}\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n      </>\n    );\n  });\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"stretch\"\n        spacing={5}\n      >\n        <Grid item>\n          <Card className={classes.root}>\n            <CardActionArea>\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  align=\"center\"\n                  variant=\"h5\"\n                  component=\"h2\"\n                >\n                  | Watercooler Forum |\n                </Typography>\n                <Divider />\n                <CardMedia\n                  className={classes.media}\n                  image={Wally}\n                  title=\"Wally\"\n                />\n                <Divider />\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Connect with your fellow co-workers here by creating a post!\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n                Share\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n                Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n      <Paper className={classes.paper}>\n        <List className={classes.root}>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Brunch this weekend?\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    Ali Connors\n                  </Typography>\n                  {\" — I'll be in your neighborhood doing errands this…\"}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Summer BBQ\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    to Scott, Alex, Jennifer\n                  </Typography>\n                  {`— Wish I could come, but I'm out of town this\n                  Wish I could come, but I'm out of town thisWish I could come, \n                  but I'm out of town thisWish I could come, but I'm \n                  out of town thisWish I could come, but I'm out \n                  of town this`}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <Divider variant=\"inset\" component=\"li\" />\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Oui Oui\"\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    Sandra Adams\n                  </Typography>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        </List>\n      </Paper>\n      {/* Soft code to generate a new text*/}\n      {renderedComment}\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Button variant=\"outlined\" color=\"primary\" onClick={savePost}>\n              <MessageIcon />\n              Submit Post\n            </Button>\n          </Grid>\n          <Grid item xs>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"Name\"\n                label=\"Name\"\n                name=\"Name\"\n                defaultValue=\"John Smith\"\n                required\n                inputRef={authorRef}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"title\"\n                label=\"Title\"\n                name=\"title\"\n                defaultValue=\"Work Thoughts\"\n                required\n                inputRef={titleRef}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                id=\"outlined-multiline-static\"\n                label=\"Comment\"\n                multiline\n                rows={6}\n                defaultValue=\"What do you guys think about work?\"\n                required\n                inputRef={bodyRef}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Forum;\n"]},"metadata":{},"sourceType":"module"}